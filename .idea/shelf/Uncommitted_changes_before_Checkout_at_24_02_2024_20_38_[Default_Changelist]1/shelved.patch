Index: panels.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\n\r\nimport game_infos\r\nimport ingame_windows\r\nimport image\r\nimport player_name\r\n\r\n\r\nclass StartGamePanel:\r\n\r\n    def __init__(self):\r\n        self.panel = image.load_image('assets/accueil/panels/start_game/panel.png')\r\n\r\n        self.new_game_button = image.load_image('assets/accueil/panels/start_game/new_game_button.png')\r\n        self.new_game_button_rect = image.get_custom_rect(self.new_game_button, 791, 508)\r\n        self.new_game_button_h = image.load_image('assets/accueil/panels/start_game/new_game_button_hover.png')\r\n\r\n        self.load_game_button = image.load_image('assets/accueil/panels/start_game/load_game_button.png')\r\n        self.load_game_button_rect = image.get_custom_rect(self.load_game_button, 130, 508)\r\n        self.load_game_button_h = image.load_image('assets/accueil/panels/start_game/load_game_button_hover.png')\r\n\r\n        self.x_button = image.load_image('assets/accueil/panels/start_game/x_button.png')\r\n        self.x_button_rect = image.get_custom_rect(self.x_button, 1144, 68)\r\n        self.x_button_h = image.load_image('assets/accueil/panels/start_game/x_button_hover.png')\r\n\r\n    def update(self, surface, possouris, basic_accueil):\r\n        surface.blit(self.panel, (0, 0))\r\n\r\n        # Bouton NEW GAME\r\n        self.update_button(self.new_game_button, self.new_game_button_rect, self.new_game_button_h, surface, possouris, basic_accueil)\r\n\r\n        # Bouton LOAD GAME\r\n        self.update_button(self.load_game_button, self.load_game_button_rect, self.load_game_button_h, surface, possouris, basic_accueil)\r\n\r\n        # Bouton NEW GAME\r\n        self.update_button(self.x_button, self.x_button_rect, self.x_button_h, surface, possouris, basic_accueil)\r\n\r\n        if not (self.x_button_rect.collidepoint(possouris) or self.new_game_button_rect.collidepoint(possouris)\r\n                or self.load_game_button_rect.collidepoint(possouris)):\r\n            pygame.mouse.set_cursor(pygame.SYSTEM_CURSOR_ARROW)\r\n\r\n    def update_button(self, button, button_rect, button_hover, surface, possouris, basic_accueil):\r\n        if button_rect.collidepoint(possouris) and not basic_accueil:\r\n            surface.blit(button_hover, button_rect)\r\n            pygame.mouse.set_cursor(pygame.SYSTEM_CURSOR_HAND)\r\n        else:\r\n            surface.blit(button, button_rect)\r\n\r\n\r\nclass ClassicGamePanel:\r\n\r\n    def __init__(self, game):\r\n        self.game = game\r\n\r\n        # LOADING FONTS --------------------------------------------\r\n        #   # Basic fonts\r\n        self.font = pygame.font.Font('assets/fonts/impact.ttf', 50)\r\n        self.font_size2 = pygame.font.Font('assets/fonts/impact.ttf', 25)\r\n        self.font_size3 = pygame.font.Font('assets/fonts/(Unranked) Bdeogale.ttf', 70)\r\n        self.money_font = pygame.font.Font('assets/fonts/Impact.ttf', 45)\r\n        self.actions_font = pygame.font.Font('assets/fonts/Impact.ttf', 90)\r\n        #   # Pokemon fonts\r\n        self.pokemon_name_font = pygame.font.Font('assets/fonts/Oswald-Regular.ttf', 25)\r\n        self.pokemon_level_font = pygame.font.Font('assets/fonts/Oswald-Regular.ttf', 15)\r\n        self.pokemon_hp_font = pygame.font.Font('assets/fonts/Oswald-Regular.ttf', 18)\r\n        self.font_pokemon_info_values = pygame.font.Font('assets/fonts/Oswald-Regular.ttf', 19)\r\n        self.font_pokemon_info_lv = pygame.font.Font('assets/fonts/Oswald-Regular.ttf', 42)\r\n        self.font_pokemon_info_name = pygame.font.Font('assets/fonts/Oswald-Regular.ttf', 23)\r\n        self.font_pokemon_type = pygame.font.Font('assets/fonts/Oswald-Regular.ttf', 15)\r\n\r\n        # LOADING IMAGES --------------------------------------------\r\n\r\n        # Elements permanents\r\n        self.background = pygame.image.load('assets/game/panels/classic_panel/background.png')\r\n        self.no_action_background = pygame.image.load('assets/game/panels/classic_panel/no_action_background.png')\r\n        self.sac = image.load_image('assets/game/panels/classic_panel/sac.png', True, (200, 200))\r\n\r\n        # Elements spontanÃ©s\r\n        #    # Player infos\r\n        self.mode_changement_pseudo_image = pygame.image.load('assets/game/panels/classic_panel/mode_changement_pseudo.png')\r\n        self.player_name_hover = pygame.image.load(\"assets/game/panels/classic_panel/player_name_hover.png\")\r\n        self.curseur_changement_pseudo = image.CursorChangePseudoMode()\r\n        self.player_name_image = self.font.render(self.game.player.name, False, (15, 0, 124))\r\n        self.player_name_indication = self.font_size2.render(\"(cliquer pour modifier)\", False, (15, 0, 124))\r\n        self.player_lv_image = self.font_size3.render(str(self.game.player.level), False, (124, 124, 124))\r\n        #   # Pokemon infos\r\n        self.pokemon_info_popup = pygame.image.load('assets/game/panels/classic_panel/pokemon_infos.png')\r\n        self.pokemon_info_popup_unknown = pygame.image.load('assets/game/panels/classic_panel/pokemon_info_unknown.png')\r\n        self.pokemon_info_popup_x_button_hover = pygame.image.load('assets/game/panels/classic_panel/pokemon_infos_x_button_hover.png')\r\n        #   # Pokemon team\r\n        self.logo_pk_suppr = pygame.image.load('assets/game/panels/classic_panel/logo_suppr_pk.png')\r\n        self.logo_pk_suppr_hover = pygame.image.load('assets/game/panels/classic_panel/logo_suppr_pk_hover.png')\r\n        self.interface_sombre_team = pygame.image.load('assets/game/panels/classic_panel/item_to_pokemon.png')\r\n        self.item_pk_hover_use = pygame.image.load('assets/game/panels/classic_panel/item_use_pk_hover.png')\r\n        self.item_pk_hover_give = pygame.image.load('assets/game/panels/classic_panel/item_give_pk_hover.png')\r\n        self.item_pk_hover_error = pygame.image.load('assets/game/panels/classic_panel/item_error_pk_hover.png')\r\n        self.item_pk_hover_give_error = pygame.image.load('assets/game/panels/classic_panel/item_error_give_pk_hover.png')\r\n        #   # Buttons\r\n        self.sac_button_hover = self.create_rect_alpha((218, 215), (113, 64, 30))  # pygame.Rect(667, 465, 218, 215)\r\n        self.go_fight_button = pygame.image.load('assets/game/panels/classic_panel/go_fight_button.png')\r\n        self.go_fight_button_v2 = pygame.image.load('assets/game/panels/classic_panel/go_fight_button_v2.png')\r\n        self.go_fight_button_hover = pygame.image.load('assets/game/panels/classic_panel/go_fight_button_hover.png')\r\n        self.go_fight_button_rect = pygame.Rect(-5, -46, 520, 180)\r\n        self.go_fight_button_compteur = 0\r\n        # GENERATING RECTS --------------------------------------------\r\n\r\n        #   # Player rects\r\n        self.player_name_rect = pygame.Rect(656, 12, 399, 51)\r\n        #   # Pokemon rects\r\n        self.pokemon_info_popup_rect = pygame.Rect(898, 6, 374, 215)\r\n        self.POKEMON_INFO_OBJ_RECT = pygame.Rect(1168, 143, 70, 70)\r\n        self.pokemon_info_obj_rect = pygame.Rect(1168, 143, 70, 70)\r\n        self.PK_RECTS = (pygame.Rect(900, 275, 369, 69), pygame.Rect(900, 348, 369, 69), pygame.Rect(900, 421, 369, 69),\r\n                         pygame.Rect(900, 494, 369, 69), pygame.Rect(900, 567, 369, 69), pygame.Rect(900, 640, 369, 69))\r\n\r\n        self.pk_rects = [pygame.Rect(900, 275, 369, 69), pygame.Rect(900, 348, 369, 69), pygame.Rect(900, 421, 369, 69),\r\n                         pygame.Rect(900, 494, 369, 69), pygame.Rect(900, 567, 369, 69), pygame.Rect(900, 640, 369, 69)]\r\n        #   # Button rects\r\n        self.sac_button_rect = pygame.Rect(667, 465, 218, 215)\r\n        self.logo_pk_suppr_rect = pygame.Rect(1085, 46, 150, 150)\r\n        self.logo_enable_item_rect = pygame.Rect(1085, 46, 150, 150)\r\n\r\n        # SET VARIABLES --------------------------------------------\r\n        #   # Pokemon infos\r\n        self.pokemon_info_mode = False\r\n        self.pokemon_info_i = 0\r\n        self.pk_info_obj_move_mode = False\r\n        #   # Pokemon move mode\r\n        self.pk_move_mode = False\r\n        self.moving_pk = [False, False, False, False, False, False]\r\n        self.rel_possouris_pk_move_mode = [0, 0]\r\n        self.saved_possouris = (0, 0)\r\n        #   # Pokemon hover\r\n        self.current_hover_pokemon_register = {0: False,\r\n                                               1: False,\r\n                                               2: False,\r\n                                               3: False,\r\n                                               4: False,\r\n                                               5: False,\r\n                                               }\r\n        self.current_hover_pokemon = None\r\n\r\n        # IMPORT/INSTANCES --------------------------------------------\r\n        self.alphabet_pixels = player_name.alphabet_pixels\r\n\r\n        self.ingame_window = ingame_windows.IngameWindow(self.game)\r\n\r\n        self.buttons = image.ClassicGamePanelButtons()\r\n\r\n    # UPDATES -----------------------------\r\n\r\n    def update(self, surface, possouris):\r\n        # BACKGROUND\r\n        if self.game.player.actions > 0:\r\n            surface.blit(self.background, (0, 0))\r\n            self.update_player_infos(surface, possouris)  # PLAYER INFOS\r\n        else:\r\n            surface.blit(self.no_action_background, (0, 0))\r\n            self.update_player_infos(surface, possouris)  # PLAYER INFOS\r\n            self.update_go_fight_button(surface, possouris)\r\n\r\n        # PLAYER TEAM\r\n        self.update_hover_pokemon()\r\n        self.update_team_pokemons(surface, possouris)\r\n\r\n        # PANEL BUTTONS\r\n        self.buttons.update(surface, possouris, self.ingame_window)\r\n\r\n        if self.sac_button_rect.collidepoint(possouris) and not self.ingame_window.is_hovering(possouris):\r\n            surface.blit(self.sac_button_hover, (667, 465))\r\n        surface.blit(self.sac, (675, 475))\r\n\r\n        # Interactions\r\n        self.update_cursor(possouris)\r\n\r\n        self.update_player_name_editing_mode(surface)\r\n\r\n        # POKEMON INFO\r\n        self.update_pokemon_info(surface, possouris)\r\n\r\n        if self.ingame_window.sac_panel.emp_move_mode and not self.ingame_window.is_hovering(possouris):\r\n            surface.blit(self.interface_sombre_team, (0, 0))\r\n\r\n        # INGAME WINDOW\r\n        self.ingame_window.update(surface, possouris)\r\n\r\n    def update_player_infos(self, surface, possouris):\r\n        # PLAYER NAME\r\n        self.update_player_name(surface, possouris)\r\n\r\n        # PLAYER LEVEL\r\n        self.update_player_lv(surface)\r\n\r\n        # PLAYER MONEY\r\n        surface.blit(self.money_font.render(str(self.game.player.money), False, (255, 255, 255)), (767, 71))\r\n\r\n        # PLAYER ACTIONS_LEFT\r\n        surface.blit(self.actions_font.render(str(self.game.player.actions), False, (0, 0, 0)), (385, 12))\r\n\r\n    def update_player_lv(self, surface):\r\n        self.player_lv_image = self.font_size3.render(str(self.game.player.level), False, (124, 124, 124))\r\n        if self.game.player.level >= 10:\r\n            surface.blit(self.player_lv_image, (955, 73))\r\n        else:\r\n            surface.blit(self.player_lv_image, (965, 73))\r\n\r\n    def update_player_name(self, surface, possouris):\r\n        surface.blit(self.font.render(self.game.player.name, False, (15, 0, 124)), (662, 10))\r\n        if self.game.player.name_editing_mode:\r\n            self.curseur_changement_pseudo.update(surface, player_name.get_pixels(self.game.player.name))\r\n        if not self.game.player.name_edited:\r\n            surface.blit(self.player_name_indication, (760, 30))\r\n\r\n        if self.player_name_rect.collidepoint(possouris):\r\n            if not self.ingame_window.is_hovering(possouris):\r\n                if self.pokemon_info_mode:\r\n                    if not self.pokemon_info_popup_rect.collidepoint(possouris):\r\n                        surface.blit(self.player_name_hover, (0, 0))\r\n                else:\r\n                    surface.blit(self.player_name_hover, (0, 0))\r\n\r\n    def update_hover_pokemon(self):\r\n        is_a_pk_hover = False\r\n        for pk_i in range(6):\r\n            if self.current_hover_pokemon_register[pk_i]:\r\n                self.current_hover_pokemon = pk_i\r\n                is_a_pk_hover = True\r\n        if not is_a_pk_hover:\r\n            self.current_hover_pokemon = None\r\n\r\n    def update_player_name_editing_mode(self, surface):\r\n        if self.game.player.name_editing_mode:\r\n            surface.blit(self.mode_changement_pseudo_image, (0, 0))\r\n\r\n    def update_team_pokemons(self, surface, possouris):\r\n        # Pokemon 1\r\n        self.update_pokemon(surface, possouris, 0)\r\n        # Pokemon 2\r\n        self.update_pokemon(surface, possouris, 1)\r\n        # Pokemon 3\r\n        self.update_pokemon(surface, possouris, 2)\r\n        # Pokemon 4\r\n        self.update_pokemon(surface, possouris, 3)\r\n        # Pokemon 5\r\n        self.update_pokemon(surface, possouris, 4)\r\n        # Pokemon 6\r\n        self.update_pokemon(surface, possouris, 5)\r\n\r\n    def update_pokemon(self, surface, possouris, i):\r\n        if self.game.player.team[i] is not None:\r\n            if not self.ingame_window.starters_panel.pk_move_mode and not self.ingame_window.sac_panel.emp_move_mode and not self.ingame_window.spawn_panel.spawning_pk_move_mode:\r\n                if not self.pk_move_mode and not self.ingame_window.is_hovering(possouris) and not self.ingame_window.moving:\r\n                    if self.game.mouse_pressed[1] and self.pk_rects[i].collidepoint(possouris):\r\n                        self.pk_move_mode = True\r\n                        self.moving_pk[i] = True\r\n                        self.rel_possouris_pk_move_mode = [0, 0]\r\n                        self.saved_possouris = possouris\r\n\r\n                if self.pk_move_mode and self.moving_pk[i]:\r\n                    if not self.logo_pk_suppr_rect.collidepoint(possouris):\r\n                        surface.blit(self.logo_pk_suppr, (0, 0))\r\n\r\n                    if not self.game.mouse_pressed[1]:\r\n                        if self.PK_RECTS[0].collidepoint(possouris):\r\n                            self.change_pk_place(i, 0)\r\n                        elif self.PK_RECTS[1].collidepoint(possouris):\r\n                            self.change_pk_place(i, 1)\r\n                        elif self.PK_RECTS[2].collidepoint(possouris):\r\n                            self.change_pk_place(i, 2)\r\n                        elif self.PK_RECTS[3].collidepoint(possouris):\r\n                            self.change_pk_place(i, 3)\r\n                        elif self.PK_RECTS[4].collidepoint(possouris):\r\n                            self.change_pk_place(i, 4)\r\n                        elif self.PK_RECTS[5].collidepoint(possouris):\r\n                            self.change_pk_place(i, 5)\r\n                        elif self.logo_pk_suppr_rect.collidepoint(possouris):\r\n                            if not self.game.player.get_nb_team_members() <= 1:\r\n                                self.game.player.team[i] = None\r\n\r\n                        self.pk_move_mode = False\r\n                        self.moving_pk[i] = False\r\n                        self.pk_rects = [pygame.Rect(900, 275, 369, 69), pygame.Rect(900, 348, 369, 69),\r\n                                         pygame.Rect(900, 421, 369, 69), pygame.Rect(900, 494, 369, 69),\r\n                                         pygame.Rect(900, 567, 369, 69), pygame.Rect(900, 640, 369, 69)]\r\n                    else:\r\n                        self.rel_possouris_pk_move_mode = (possouris[0] - self.saved_possouris[0],\r\n                                                           possouris[1] - self.saved_possouris[1])\r\n                        self.pk_rects[i].x = self.PK_RECTS[i].x + self.rel_possouris_pk_move_mode[0]\r\n                        self.pk_rects[i].y = self.PK_RECTS[i].y + self.rel_possouris_pk_move_mode[1]\r\n\r\n                        if self.logo_pk_suppr_rect.collidepoint(possouris):\r\n                            surface.blit(self.logo_pk_suppr_hover, (0, 0))\r\n\r\n            if self.game.player.team[i] is not None:\r\n                surface.blit(self.game.player.team[i].icon_image, (self.pk_rects[i].x, self.pk_rects[i].y - 5),\r\n                             (0, 0, 64, 64))\r\n                surface.blit(self.pokemon_name_font.render(self.game.player.team[i].name, False, (0, 0, 0)),\r\n                             (self.pk_rects[i].x + 70, self.pk_rects[i].y + 13))\r\n                level = self.pokemon_level_font.render('Lv.' + str(self.game.player.team[i].level), False, (0, 0, 0))\r\n                surface.blit(level, (self.pk_rects[i].x + 60, self.pk_rects[i].y + 42))\r\n\r\n                type_color = game_infos.get_type_color(self.game.player.team[i].get_type())\r\n                type_name_to_print = game_infos.get_type_name_to_print(self.game.player.team[i].get_type())\r\n                type1_render = self.font_pokemon_type.render(type_name_to_print, False, type_color)\r\n                surface.blit(type1_render, ((self.pk_rects[i].x + level.get_width() + 65, self.pk_rects[i].y + 42)))\r\n\r\n                type2 = self.game.player.team[i].get_type2()\r\n                if not type2 == 'NoType':\r\n                    type2_color = game_infos.get_type_color(type2)\r\n                    type2_name_to_print = game_infos.get_type_name_to_print(type2)\r\n                    surface.blit(self.font_pokemon_type.render(type2_name_to_print, False, type2_color),\r\n                                 ((self.pk_rects[i].x + level.get_width() + type1_render.get_width() + 68, self.pk_rects[i].y + 42)))\r\n\r\n\r\n                pygame.draw.rect(surface, (35, 35, 35),\r\n                                 pygame.Rect(self.pk_rects[i].x + 205, self.pk_rects[i].y + 26, 150, 17))\r\n                pygame.draw.rect(surface, (42, 214, 0), pygame.Rect(self.pk_rects[i].x + 205,\r\n                                                                    self.pk_rects[i].y + 26,\r\n                                                                    self.game.player.team[i].health / self.game.player.team[\r\n                                                                        i].pv * 150,\r\n                                                                    17))\r\n                surface.blit(\r\n                    self.pokemon_hp_font.render(str(self.game.player.team[i].health) + \"/\" + str(self.game.player.team[i].pv),\r\n                                                False, (0, 0, 0)), (self.pk_rects[i].x + 205, self.pk_rects[i].y + 40))\r\n\r\n                if self.game.player.team[i].objet_tenu is not None:\r\n                    surface.blit(self.font_pokemon_type.render('ITEM', False, (30, 30, 30)), (self.pk_rects[i].x + 327, self.pk_rects[i].y + 6))\r\n\r\n        if i in (0, 2, 4):\r\n            color = (255, 255, 255)\r\n        else:\r\n            color = (163, 171, 255)\r\n\r\n        if self.pk_rects[i].collidepoint(possouris):\r\n            if not self.ingame_window.is_hovering(possouris):\r\n                surface.blit(self.create_rect_alpha((369, 69), color), (self.pk_rects[i].x, self.pk_rects[i].y))\r\n                self.current_hover_pokemon_register[i] = True\r\n\r\n                if self.ingame_window.sac_panel.emp_move_mode:\r\n                    if self.game.player.team[i] is not None:\r\n                        if self.ingame_window.sac_panel.selected_item.target_pokemon == 'All' or\\\r\n                                self.game.player.team[i].name == self.ingame_window.sac_panel.selected_item.target_pokemon:\r\n\r\n                            if 'Use' in self.ingame_window.sac_panel.selected_item.fonctionnement:\r\n                                surface.blit(self.item_pk_hover_use, (self.PK_RECTS[i].x - 3, self.PK_RECTS[i].y - 2))\r\n                            elif 'Give' in self.ingame_window.sac_panel.selected_item.fonctionnement:\r\n                                if self.game.player.team[i].objet_tenu is None:\r\n                                    surface.blit(self.item_pk_hover_give, (self.PK_RECTS[i].x - 3, self.PK_RECTS[i].y - 2))\r\n                                else:\r\n                                    surface.blit(self.item_pk_hover_give_error,\r\n                                                 (self.PK_RECTS[i].x - 3, self.PK_RECTS[i].y - 2))\r\n                            else:\r\n                                surface.blit(self.item_pk_hover_error, (self.PK_RECTS[i].x - 3, self.PK_RECTS[i].y - 2))\r\n                        else:\r\n                            surface.blit(self.item_pk_hover_error, (self.PK_RECTS[i].x - 3, self.PK_RECTS[i].y - 2))\r\n        else:\r\n            self.current_hover_pokemon_register[i] = False\r\n\r\n    def update_pokemon_info(self, surface, possouris):\r\n        if self.pokemon_info_mode:\r\n            if pygame.Rect(1210, 9, 59, 59).collidepoint(possouris):\r\n                surface.blit(self.pokemon_info_popup_x_button_hover, (0, 0))\r\n            else:\r\n                surface.blit(self.pokemon_info_popup, (0, 0))\r\n\r\n            if self.game.player.team[self.pokemon_info_i] is not None:\r\n                surface.blit(pygame.transform.scale(self.game.player.team[self.pokemon_info_i].icon_image, (280, 140)),\r\n                             (900, 0), (0, 0, 140, 140))\r\n                surface.blit(self.font_pokemon_info_name.render(self.game.player.team[self.pokemon_info_i].name, False,\r\n                                                                (0, 0, 0)), (1038, 15))\r\n                surface.blit(\r\n                    self.font_pokemon_info_values.render(str(self.game.player.team[self.pokemon_info_i].pv), False,\r\n                                                         (2, 137, 0)), (1070, 43))\r\n                surface.blit(\r\n                    self.font_pokemon_info_values.render(str(self.game.player.team[self.pokemon_info_i].attack), False,\r\n                                                         (189, 0, 0)), (1070, 66))\r\n                surface.blit(\r\n                    self.font_pokemon_info_values.render(str(self.game.player.team[self.pokemon_info_i].defense), False,\r\n                                                         (191, 200, 0)), (1070, 89))\r\n                surface.blit(\r\n                    self.font_pokemon_info_values.render(str(self.game.player.team[self.pokemon_info_i].speed), False,\r\n                                                         (0, 139, 230)), (1070, 112))\r\n                surface.blit(\r\n                    self.font_pokemon_info_lv.render(str(self.game.player.team[self.pokemon_info_i].level), False,\r\n                                                     (0, 0, 0)), (965, 139))\r\n\r\n                if self.game.player.team[self.pokemon_info_i].objet_tenu is not None:\r\n\r\n                    if self.pokemon_info_obj_rect.collidepoint(possouris):\r\n                        surface.blit(self.create_rect_alpha((70, 70), (255, 255, 255)), self.pokemon_info_obj_rect)\r\n                    surface.blit(\r\n                        pygame.transform.scale(self.game.player.team[self.pokemon_info_i].objet_tenu.icon_image,\r\n                                               (70, 70)),\r\n                        (self.pokemon_info_obj_rect.x + 2, self.pokemon_info_obj_rect.y))\r\n            else:\r\n                surface.blit(self.pokemon_info_popup_unknown, (0, 0))\r\n\r\n    def update_cursor(self, possouris):\r\n        if self.get_interactions(possouris=possouris):\r\n            if pygame.mouse.get_cursor() != pygame.SYSTEM_CURSOR_HAND:\r\n                pygame.mouse.set_cursor(pygame.SYSTEM_CURSOR_HAND)\r\n        else:\r\n            if pygame.mouse.get_cursor() != pygame.SYSTEM_CURSOR_ARROW:\r\n                pygame.mouse.set_cursor(pygame.SYSTEM_CURSOR_ARROW)\r\n\r\n    def update_go_fight_button(self, surface, possouris):\r\n\r\n        if not self.go_fight_button_rect.collidepoint(possouris):\r\n            if self.go_fight_button_compteur < 50:\r\n                surface.blit(self.go_fight_button, self.go_fight_button_rect)\r\n            else:\r\n                surface.blit(self.go_fight_button_v2, self.go_fight_button_rect)\r\n        else:\r\n            surface.blit(self.go_fight_button_hover, self.go_fight_button_rect)\r\n\r\n        self.go_fight_button_compteur += 1\r\n        if self.go_fight_button_compteur > 100:\r\n            self.go_fight_button_compteur = 0\r\n\r\n    # INTERACTIONS -----------------------------\r\n\r\n    def left_clic_interactions(self, possouris):\r\n        if not self.pk_move_mode:\r\n            if self.player_name_rect.collidepoint(possouris):\r\n                if self.pokemon_info_mode:\r\n                    if not self.pokemon_info_popup_rect.collidepoint(possouris):\r\n                        game.player.enable_name_editing_mode()\r\n                        self.pokemon_info_mode = False\r\n                else:\r\n                    self.game.player.enable_name_editing_mode()\r\n\r\n                if self.ingame_window.is_open:\r\n                    self.ingame_window.close()\r\n\r\n            if self.game.is_starter_selected:\r\n                if self.buttons.spawn_button_rect.collidepoint(possouris):\r\n                    if self.buttons.unlocked_buttons['Spawn']:\r\n                        self.ingame_window.update_panel('Spawn')\r\n                        self.ingame_window.open()\r\n                        self.ingame_window.maximize()\r\n                elif self.buttons.train_button_rect.collidepoint(possouris):\r\n                    if self.buttons.unlocked_buttons['Train']:\r\n                        self.ingame_window.update_panel('Train')\r\n                        self.ingame_window.open()\r\n                        self.ingame_window.maximize()\r\n                elif self.buttons.grind_button_rect.collidepoint(possouris):\r\n                    if self.buttons.unlocked_buttons['Grind']:\r\n                        self.ingame_window.update_panel('Grind')\r\n                        self.ingame_window.open()\r\n                        self.ingame_window.maximize()\r\n                elif self.buttons.items_button_rect.collidepoint(possouris):\r\n                    if self.buttons.unlocked_buttons['Items']:\r\n                        self.ingame_window.update_panel('Items')\r\n                        self.ingame_window.open()\r\n                        self.ingame_window.maximize()\r\n                elif self.buttons.evol_button_rect.collidepoint(possouris):\r\n                    if self.buttons.unlocked_buttons['Evol']:\r\n                        self.ingame_window.update_panel('Evolutions')\r\n                        self.ingame_window.open()\r\n                        self.ingame_window.maximize()\r\n                if self.sac_button_rect.collidepoint(possouris):\r\n                    self.ingame_window.update_panel(\"Sac d'objets\")\r\n                    self.ingame_window.open()\r\n                    self.ingame_window.maximize()\r\n\r\n            if self.pokemon_info_mode:\r\n                if pygame.Rect(1210, 9, 59, 59).collidepoint(possouris):\r\n                    self.pokemon_info_mode = False\r\n\r\n    def get_interactions(self, possouris):\r\n        if self.ingame_window.is_hovering(possouris):\r\n            return self.ingame_window.is_hovering_buttons(possouris)\r\n        else:\r\n            if self.player_name_rect.collidepoint(possouris):\r\n                if self.pokemon_info_mode:\r\n                    if not self.pokemon_info_popup_rect.collidepoint(possouris):\r\n                        return True\r\n                    else:\r\n                        return False\r\n                else:\r\n                    return True\r\n\r\n            elif self.buttons.is_hovering_button(possouris):\r\n                return True\r\n            elif self.is_hovering_team_pokemon(possouris):\r\n                return True\r\n            elif self.sac_button_rect.collidepoint(possouris):\r\n                return True\r\n            elif self.is_hovering_pokemon_info_popup_buttons(possouris):\r\n                return True\r\n            elif self.game.player.actions <= 0 and self.go_fight_button_rect.collidepoint(possouris):\r\n                return True\r\n            else:\r\n                return False\r\n\r\n    def create_rect_alpha(self, dimensions, color):\r\n        rect = pygame.Surface(dimensions)\r\n        rect.set_alpha(90)\r\n        rect.fill(color)\r\n        return rect\r\n\r\n    def change_pk_place(self, i1, i2):\r\n        if not i1 == i2:\r\n            self.game.player.team[i1], self.game.player.team[i2] = self.game.player.team[i2], self.game.player.team[i1]\r\n            if self.pokemon_info_mode:\r\n                if self.pokemon_info_i == i1:\r\n                    self.pokemon_info_i = i2\r\n\r\n    def is_hovering_team_pokemon(self, possouris):\r\n        if not self.pk_rects[0].collidepoint(possouris) and not self.pk_rects[1].collidepoint(possouris):\r\n            if not self.pk_rects[2].collidepoint(possouris) and not self.pk_rects[3].collidepoint(possouris):\r\n                if not self.pk_rects[4].collidepoint(possouris) and not self.pk_rects[5].collidepoint(possouris):\r\n                    return False\r\n        return True\r\n\r\n    def is_hovering_pokemon_info_popup_buttons(self, possouris):\r\n        if pygame.Rect(1210, 9, 59, 59).collidepoint(possouris):\r\n            return True\r\n        elif pygame.Rect(1166, 141, 74, 74).collidepoint(possouris) and self.game.player.team[\r\n            self.pokemon_info_i] is not None and self.game.player.team[self.pokemon_info_i].objet_tenu is not None:\r\n            return True\r\n\r\n        return False\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/panels.py b/panels.py
--- a/panels.py	
+++ b/panels.py	
@@ -159,6 +159,7 @@
             self.update_player_infos(surface, possouris)  # PLAYER INFOS
             self.update_go_fight_button(surface, possouris)
 
+
         # PLAYER TEAM
         self.update_hover_pokemon()
         self.update_team_pokemons(surface, possouris)
Index: starters.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport pokemon\r\npygame.font.init()\r\n\r\n\r\nclass StartersPanel:\r\n\r\n    def __init__(self, game):\r\n        self.game = game\r\n\r\n        self.background = pygame.image.load('assets/game/ingame_windows/Starters/background.png')\r\n        self.button_aide = pygame.image.load('assets/game/ingame_windows/Starters/button_aide.png')\r\n        self.button_aide_rect = pygame.Rect(800, 444, 42, 42)\r\n        self.button_aide_hover = pygame.image.load('assets/game/ingame_windows/Starters/button_aide_hover.png')\r\n\r\n        self.pokeballs = [pygame.image.load('assets/game/ingame_windows/Starters/pokeball1.png'),\r\n                          pygame.image.load('assets/game/ingame_windows/Starters/pokeball2.png'),\r\n                          pygame.image.load('assets/game/ingame_windows/Starters/pokeball3.png')]\r\n\r\n        self.PK_RECTS = [pygame.Rect(80, 84, 190, 190), pygame.Rect(362, 84, 190, 190), pygame.Rect(642, 84, 190, 190)]\r\n        self.pk_rects = [pygame.Rect(80, 84, 190, 190), pygame.Rect(362, 84, 190, 190), pygame.Rect(642, 84, 190, 190)]\r\n\r\n        self.pk_hover = pygame.image.load('assets/game/ingame_windows/Starters/pokeball_hover.png')\r\n        self.pk_hover = pygame.transform.scale(self.pk_hover, (190, 190))\r\n\r\n        self.starters = [pokemon.Pokemon(self.game.starters[0], 5, self.game.player),\r\n                         pokemon.Pokemon(self.game.starters[1], 5, self.game.player),\r\n                         pokemon.Pokemon(self.game.starters[2], 5, self.game.player)]\r\n        self.pk_decouverts = [False, False, False]\r\n\r\n        self.pk_name_font = pygame.font.Font('assets/fonts/Oswald-Regular.ttf', 30)\r\n        self.pk_move_mode = False\r\n        self.pk_moving = [False, False, False]\r\n        self.rel_possouris_pk_move_mode = [0, 0]\r\n        self.saved_possouris = [0, 0]\r\n\r\n    def update(self, surface, possouris, window_pos):\r\n        self.update_rect_pos(window_pos)\r\n\r\n        surface.blit(self.background, window_pos)\r\n\r\n        if self.button_aide_rect.collidepoint(possouris):\r\n            surface.blit(self.button_aide_hover, window_pos)\r\n        else:\r\n            surface.blit(self.button_aide, window_pos)\r\n\r\n        self.update_pokemon(surface, possouris, window_pos, 0)\r\n        self.update_pokemon(surface, possouris, window_pos, 1)\r\n        self.update_pokemon(surface, possouris, window_pos, 2)\r\n\r\n\r\n    def create_rect_alpha(self, dimensions, color):\r\n        rect = pygame.Surface(dimensions)\r\n        rect.set_alpha(90)\r\n        rect.fill(color)\r\n        return rect\r\n\r\n    def update_rect_pos(self, window_pos):\r\n        self.button_aide_rect = pygame.Rect(800 + window_pos[0], 444 + window_pos[1], 42, 42)\r\n        self.PK_RECTS = [pygame.Rect(80 + window_pos[0], 84 + window_pos[1], 190, 190),\r\n                         pygame.Rect(362 + window_pos[0], 84 + window_pos[1], 190, 190),\r\n                         pygame.Rect(642 + window_pos[0], 84 + window_pos[1], 190, 190)]\r\n        self.pk_rects = [pygame.Rect(80 + window_pos[0], 84 + window_pos[1], 190, 190),\r\n                         pygame.Rect(362 + window_pos[0], 84 + window_pos[1], 190, 190),\r\n                         pygame.Rect(642 + window_pos[0], 84 + window_pos[1], 190, 190)]\r\n\r\n    def reset_player_team(self, i):\r\n        if not 0 == i:\r\n            self.game.player.team[0] = None\r\n        if not 1 == i:\r\n            self.game.player.team[1] = None\r\n        if not 2 == i:\r\n            self.game.player.team[2] = None\r\n        if not 3 == i:\r\n            self.game.player.team[3] = None\r\n        if not 4 == i:\r\n            self.game.player.team[4] = None\r\n        if not 5 == i:\r\n            self.game.player.team[5] = None\r\n\r\n    def update_pokemon(self, surface, possouris, window_pos, i):\r\n        if not self.pk_move_mode and not self.pk_moving[i]:\r\n            if self.game.mouse_pressed[1] and self.pk_rects[i].collidepoint(possouris):\r\n                if self.pk_decouverts[i]:\r\n                    self.pk_move_mode = True\r\n                    self.pk_moving[i] = True\r\n                    self.rel_possouris_pk_move_mode = [0, 0]\r\n                    self.saved_possouris = possouris\r\n\r\n        if self.pk_move_mode and self.pk_moving[i]:\r\n            if not self.game.mouse_pressed[1]:\r\n\r\n                if self.game.classic_panel.PK_RECTS[0].collidepoint(possouris):\r\n                    self.select_starter(i, 0)\r\n                elif self.game.classic_panel.PK_RECTS[1].collidepoint(possouris):\r\n                    self.select_starter(i, 1)\r\n                elif self.game.classic_panel.PK_RECTS[2].collidepoint(possouris):\r\n                    self.select_starter(i, 2)\r\n                elif self.game.classic_panel.PK_RECTS[3].collidepoint(possouris):\r\n                    self.select_starter(i, 3)\r\n                elif self.game.classic_panel.PK_RECTS[4].collidepoint(possouris):\r\n                    self.select_starter(i, 4)\r\n                elif self.game.classic_panel.PK_RECTS[5].collidepoint(possouris):\r\n                    self.select_starter(i, 5)\r\n                else:\r\n                    self.pk_rects = [pygame.Rect(80 + window_pos[0], 84 + window_pos[1], 190, 190),\r\n                                     pygame.Rect(362 + window_pos[0], 84 + window_pos[1], 190, 190),\r\n                                     pygame.Rect(642 + window_pos[0], 84 + window_pos[1], 190, 190)]\r\n\r\n                self.pk_moving[i] = False\r\n                self.pk_move_mode = False\r\n            else:\r\n                self.rel_possouris_pk_move_mode = (possouris[0] - self.saved_possouris[0], possouris[1]- self.saved_possouris[1])\r\n                self.pk_rects[i].x = self.PK_RECTS[i].x + self.rel_possouris_pk_move_mode[0]\r\n                self.pk_rects[i].y = self.PK_RECTS[i].y + self.rel_possouris_pk_move_mode[1]\r\n\r\n        if self.pk_rects[i].collidepoint(possouris):\r\n            surface.blit(self.create_rect_alpha((210, 210), (255, 255, 255)), (self.pk_rects[i].x - 10, self.pk_rects[i].y - 5))\r\n\r\n        if self.pk_decouverts[i]:\r\n            if self.starters[i].name == 'Bulbizarre':\r\n                surface.blit(pygame.transform.scale(self.starters[i].icon_image, (500, 250)),\r\n                             (self.pk_rects[i].x - 40, self.pk_rects[i].y - 50), (0, 0, 250, 250))\r\n            else:\r\n                surface.blit(pygame.transform.scale(self.starters[i].icon_image, (500, 250)), (self.pk_rects[i].x - 30, self.pk_rects[i].y - 50), (0, 0, 250, 250))\r\n            surface.blit(self.pk_name_font.render(self.starters[i].name, False, (255, 255, 255)), ((250-self.pk_name_font.render(self.starters[i].name, False, (255, 255, 255)).get_rect().w)/2 + window_pos[0]+50+(282*i), 318+window_pos[1]))\r\n\r\n        else:\r\n            surface.blit(self.pokeballs[i], (0+window_pos[0], 0+window_pos[1]))\r\n\r\n    def select_starter(self, i_starter, i_team=0):\r\n        self.game.player.team[i_team] = self.starters[i_starter]\r\n        self.game.is_starter_selected = True\r\n        self.reset_player_team(i_team)\r\n\r\n        # self.game.classic_panel.ingame_window.init_train_panel()\r\n\r\n    def decouvrir_pk(self, i):\r\n        self.pk_decouverts[i] = True\r\n\r\n    def left_clic_interactions(self, possouris):\r\n        if self.pk_rects[0].collidepoint(possouris):\r\n            self.decouvrir_pk(0)\r\n        elif self.pk_rects[1].collidepoint(possouris):\r\n            self.decouvrir_pk(1)\r\n        elif self.pk_rects[2].collidepoint(possouris):\r\n            self.decouvrir_pk(2)\r\n\r\n    def is_hovering_buttons(self, possouris):\r\n        if self.pk_rects[0].collidepoint(possouris) or self.pk_rects[1].collidepoint(possouris) \\\r\n                or self.pk_rects[2].collidepoint(possouris) or self.button_aide_rect.collidepoint(possouris):\r\n            return True\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/starters.py b/starters.py
--- a/starters.py	
+++ b/starters.py	
@@ -133,8 +133,6 @@
         self.game.is_starter_selected = True
         self.reset_player_team(i_team)
 
-        # self.game.classic_panel.ingame_window.init_train_panel()
-
     def decouvrir_pk(self, i):
         self.pk_decouverts[i] = True
 
